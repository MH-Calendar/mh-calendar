/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { IMHCalendarFullOptions, MHCalendarEvents } from "./types";
import { IMHCalendarEvent, IMHCalendarViewType } from "./store/store/mh-calendar-store.types";
import { IMHCalendarEvent as IMHCalendarEvent1 } from "./components";
export { IMHCalendarFullOptions, MHCalendarEvents } from "./types";
export { IMHCalendarEvent, IMHCalendarViewType } from "./store/store/mh-calendar-store.types";
export { IMHCalendarEvent as IMHCalendarEvent1 } from "./components";
export namespace Components {
    interface MhCalendar {
        /**
          * @default {}
         */
        "config": IMHCalendarFullOptions;
        /**
          * @default []
         */
        "events": IMHCalendarEvent[];
        "getApi": () => Promise<import("/Users/mateusz/MH-Calendar/Dev/mh-calendar-core/src/store/store/mh-calendar-store.user-api").IMHCalendarStoreUserApi>;
        "reactComponent": any;
    }
    interface MhCalendarDay {
        "day"?: Date;
        /**
          * @default SHOW_DATE_ON_DAY
         */
        "showCurrentDate": boolean;
    }
    interface MhCalendarEvent {
        "dayHeight"?: number;
        "dayOfRendering"?: Date;
        "event"?: MHCalendarEvents;
        "eventTopPosition"?: number;
        "instanceOfEvent"?: string;
        /**
          * @default false
         */
        "isDragged": boolean;
    }
    interface MhCalendarEventFull {
        "event"?: IMHCalendarEvent;
    }
    interface MhCalendarEventSmall {
        "event"?: IMHCalendarEvent1;
    }
    interface MhCalendarHeader {
        /**
          * @default false
         */
        "showCurrentDate": boolean;
    }
    interface MhCalendarMonth {
    }
    interface MhCalendarMultiView {
    }
    interface MhCalendarNavigation {
        /**
          * @default DEFAULT_NAVIGATION_UNIT
         */
        "changeDateRangeByUnit": IMHCalendarViewType;
    }
    interface MhCalendarTimeSlots {
    }
}
declare global {
    interface HTMLMhCalendarElement extends Components.MhCalendar, HTMLStencilElement {
    }
    var HTMLMhCalendarElement: {
        prototype: HTMLMhCalendarElement;
        new (): HTMLMhCalendarElement;
    };
    interface HTMLMhCalendarDayElement extends Components.MhCalendarDay, HTMLStencilElement {
    }
    var HTMLMhCalendarDayElement: {
        prototype: HTMLMhCalendarDayElement;
        new (): HTMLMhCalendarDayElement;
    };
    interface HTMLMhCalendarEventElement extends Components.MhCalendarEvent, HTMLStencilElement {
    }
    var HTMLMhCalendarEventElement: {
        prototype: HTMLMhCalendarEventElement;
        new (): HTMLMhCalendarEventElement;
    };
    interface HTMLMhCalendarEventFullElement extends Components.MhCalendarEventFull, HTMLStencilElement {
    }
    var HTMLMhCalendarEventFullElement: {
        prototype: HTMLMhCalendarEventFullElement;
        new (): HTMLMhCalendarEventFullElement;
    };
    interface HTMLMhCalendarEventSmallElement extends Components.MhCalendarEventSmall, HTMLStencilElement {
    }
    var HTMLMhCalendarEventSmallElement: {
        prototype: HTMLMhCalendarEventSmallElement;
        new (): HTMLMhCalendarEventSmallElement;
    };
    interface HTMLMhCalendarHeaderElement extends Components.MhCalendarHeader, HTMLStencilElement {
    }
    var HTMLMhCalendarHeaderElement: {
        prototype: HTMLMhCalendarHeaderElement;
        new (): HTMLMhCalendarHeaderElement;
    };
    interface HTMLMhCalendarMonthElement extends Components.MhCalendarMonth, HTMLStencilElement {
    }
    var HTMLMhCalendarMonthElement: {
        prototype: HTMLMhCalendarMonthElement;
        new (): HTMLMhCalendarMonthElement;
    };
    interface HTMLMhCalendarMultiViewElement extends Components.MhCalendarMultiView, HTMLStencilElement {
    }
    var HTMLMhCalendarMultiViewElement: {
        prototype: HTMLMhCalendarMultiViewElement;
        new (): HTMLMhCalendarMultiViewElement;
    };
    interface HTMLMhCalendarNavigationElement extends Components.MhCalendarNavigation, HTMLStencilElement {
    }
    var HTMLMhCalendarNavigationElement: {
        prototype: HTMLMhCalendarNavigationElement;
        new (): HTMLMhCalendarNavigationElement;
    };
    interface HTMLMhCalendarTimeSlotsElement extends Components.MhCalendarTimeSlots, HTMLStencilElement {
    }
    var HTMLMhCalendarTimeSlotsElement: {
        prototype: HTMLMhCalendarTimeSlotsElement;
        new (): HTMLMhCalendarTimeSlotsElement;
    };
    interface HTMLElementTagNameMap {
        "mh-calendar": HTMLMhCalendarElement;
        "mh-calendar-day": HTMLMhCalendarDayElement;
        "mh-calendar-event": HTMLMhCalendarEventElement;
        "mh-calendar-event-full": HTMLMhCalendarEventFullElement;
        "mh-calendar-event-small": HTMLMhCalendarEventSmallElement;
        "mh-calendar-header": HTMLMhCalendarHeaderElement;
        "mh-calendar-month": HTMLMhCalendarMonthElement;
        "mh-calendar-multi-view": HTMLMhCalendarMultiViewElement;
        "mh-calendar-navigation": HTMLMhCalendarNavigationElement;
        "mh-calendar-time-slots": HTMLMhCalendarTimeSlotsElement;
    }
}
declare namespace LocalJSX {
    interface MhCalendar {
        /**
          * @default {}
         */
        "config"?: IMHCalendarFullOptions;
        /**
          * @default []
         */
        "events"?: IMHCalendarEvent[];
        "reactComponent"?: any;
    }
    interface MhCalendarDay {
        "day"?: Date;
        /**
          * @default SHOW_DATE_ON_DAY
         */
        "showCurrentDate"?: boolean;
    }
    interface MhCalendarEvent {
        "dayHeight"?: number;
        "dayOfRendering"?: Date;
        "event"?: MHCalendarEvents;
        "eventTopPosition"?: number;
        "instanceOfEvent"?: string;
        /**
          * @default false
         */
        "isDragged"?: boolean;
    }
    interface MhCalendarEventFull {
        "event"?: IMHCalendarEvent;
    }
    interface MhCalendarEventSmall {
        "event"?: IMHCalendarEvent1;
    }
    interface MhCalendarHeader {
        /**
          * @default false
         */
        "showCurrentDate"?: boolean;
    }
    interface MhCalendarMonth {
    }
    interface MhCalendarMultiView {
    }
    interface MhCalendarNavigation {
        /**
          * @default DEFAULT_NAVIGATION_UNIT
         */
        "changeDateRangeByUnit"?: IMHCalendarViewType;
    }
    interface MhCalendarTimeSlots {
    }
    interface IntrinsicElements {
        "mh-calendar": MhCalendar;
        "mh-calendar-day": MhCalendarDay;
        "mh-calendar-event": MhCalendarEvent;
        "mh-calendar-event-full": MhCalendarEventFull;
        "mh-calendar-event-small": MhCalendarEventSmall;
        "mh-calendar-header": MhCalendarHeader;
        "mh-calendar-month": MhCalendarMonth;
        "mh-calendar-multi-view": MhCalendarMultiView;
        "mh-calendar-navigation": MhCalendarNavigation;
        "mh-calendar-time-slots": MhCalendarTimeSlots;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "mh-calendar": LocalJSX.MhCalendar & JSXBase.HTMLAttributes<HTMLMhCalendarElement>;
            "mh-calendar-day": LocalJSX.MhCalendarDay & JSXBase.HTMLAttributes<HTMLMhCalendarDayElement>;
            "mh-calendar-event": LocalJSX.MhCalendarEvent & JSXBase.HTMLAttributes<HTMLMhCalendarEventElement>;
            "mh-calendar-event-full": LocalJSX.MhCalendarEventFull & JSXBase.HTMLAttributes<HTMLMhCalendarEventFullElement>;
            "mh-calendar-event-small": LocalJSX.MhCalendarEventSmall & JSXBase.HTMLAttributes<HTMLMhCalendarEventSmallElement>;
            "mh-calendar-header": LocalJSX.MhCalendarHeader & JSXBase.HTMLAttributes<HTMLMhCalendarHeaderElement>;
            "mh-calendar-month": LocalJSX.MhCalendarMonth & JSXBase.HTMLAttributes<HTMLMhCalendarMonthElement>;
            "mh-calendar-multi-view": LocalJSX.MhCalendarMultiView & JSXBase.HTMLAttributes<HTMLMhCalendarMultiViewElement>;
            "mh-calendar-navigation": LocalJSX.MhCalendarNavigation & JSXBase.HTMLAttributes<HTMLMhCalendarNavigationElement>;
            "mh-calendar-time-slots": LocalJSX.MhCalendarTimeSlots & JSXBase.HTMLAttributes<HTMLMhCalendarTimeSlotsElement>;
        }
    }
}
